import os
from datetime import datetime
import random
import sys
import subprocess


# Images reference https://emojicombos.com/japanese-text-art
# Color reference  https://saturncloud.io/blog/how-to-print-colored-text-to-the-terminal/


def demon_face():
    print("""
        \u001b[47m
        \u001b[30m
        ⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠂
        ⠀⠘⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⠁⠀
        ⠀⠀⢸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡇⠀⠀
        ⠀⠀⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⡇⠀⠀
        ⠀⠀⠀⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⡇⠀⠀
        ⠀⠀⠀⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⠃⠀⠀
        ⠀⠀⠀⢻⣿⣿⣿⣿⣷⣦⣀⠀⠀⠀⠀⣀⣤⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣦⣄⣀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣿⠀⠀⠀
        ⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣝⣛⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣙⣭⣥⣶⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀
        ⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀
        ⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⢈⢿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣌⢿⣿⣿⣿⣿⣿⣿⣿⡿⢣⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⢠⣿⣦⣽⣛⣻⠿⠿⣟⣛⣵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣭⣛⣛⣛⣛⣻⣭⣶⣿⣧⠀⠀⠀⠀
        ⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀
        ⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡸⣿⡏⢿⣿⣿⣿⡟⣼⣿⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀
        ⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠹⣿⡈⢿⣿⠟⢰⣿⢃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀
        ⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠹⣷⡀⠉⢠⣿⠏⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀
        ⠀⠀⠀⠀⣿⣿⣿⣿⣯⣍⡛⠻⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⣿⣷⣶⣿⡟⠀⢿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠛⢋⣩⣵⣾⣿⣿⣿⡟⠀⠀⠀
        ⠀⠀⠀⠀⣿⣿⣜⢿⣿⣿⣿⣿⣶⣶⣤⣤⣤⣉⣉⣉⣁⣀⣠⣴⣿⣿⣿⣿⣿⣤⣄⣀⣀⣀⣠⣤⣤⣴⣶⣾⣿⣿⣿⣿⡿⢋⣾⣿⣇⠀⠀⠀
        ⠀⠀⠀⢰⣿⣿⣿⣷⣮⡝⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠛⢩⣾⣿⣿⣿⡿⣄⠀⠀
        ⠀⠀⢰⡏⠘⢿⣿⣿⣿⣇⠀⠀⠀⠀⠉⢭⣭⣽⡟⠛⠛⠛⠋⢁⣿⣿⣿⣿⣷⡈⠉⠉⠉⠉⢭⣭⣭⠵⠀⠀⠀⠀⠀⣼⣿⣿⣿⠟⠀⣽⠀⠀
        ⠀⠀⠀⢿⣄⠀⠻⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⡿⠃⢀⣾⡟⠀⠀
        ⠀⠀⠀⠘⣿⣷⣤⣈⠛⠿⣿⣷⣦⣄⡀⠀⠀⠀⠀⠀⣀⣤⣾⡿⢸⣿⣿⣿⡇⢿⣷⣤⣀⡀⠀⠀⠀⢀⣀⣤⣶⣿⡿⠟⣉⣤⣴⣿⡿⠀⠀⠀
        ⠀⠀⠀⠀⠸⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢃⣾⣿⣿⣿⣷⡈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⡿⠁⠀⠀⠀
        ⠀⠀⠀⠀⠀⢹⣿⣭⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣷⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣫⣶⣶⡇⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⣸⣿⣿⡟⢈⣭⣟⣛⠿⠿⣿⣿⣿⠟⣩⣤⣬⣝⢿⣿⣿⣿⣿⣿⣿⣫⣥⣶⣌⠙⠿⡿⠿⠿⣛⣫⣭⣧⣄⢹⣿⣿⣇⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⣿⣿⣿⣇⣿⣿⢛⣯⣟⢿⣶⣶⣶⡇⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⢸⣿⣾⣿⢟⣯⣭⣝⢻⣿⣼⣿⣿⡿⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⢸⣿⣿⣿⡿⣵⣿⣿⣿⣷⢹⣿⣿⣇⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣸⣿⣿⡏⣾⣿⣿⣿⣧⡹⣿⣿⣿⠇⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⢿⡿⢋⣾⣿⣿⣿⣿⠟⢈⢿⣿⣿⣷⣤⣉⠙⠿⣿⣿⣿⣿⣿⠿⠛⣉⣤⣾⣿⣿⡿⡁⠙⢿⣿⣿⣿⣿⣌⠻⡿⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⢀⣨⣶⣿⣿⡿⢟⠋⠀⠀⢸⡎⠻⣿⣿⣿⣿⣿⣶⣮⣭⣿⣯⣵⣶⣿⣿⣿⣿⡿⢟⠱⡇⠀⠀⠈⣙⡻⠿⣿⣿⣦⣄⡀⠀⠀⠀
        ⠀⠀⠀⠀⠒⠛⠛⠉⣽⣶⣾⣿⣧⠀⠀⠈⠃⣿⣶⣶⢰⣮⡝⣛⣻⢿⣿⣿⢿⣛⡫⣵⣶⢲⣾⣿⠀⠃⠀⠀⣸⣿⣿⣿⣶⠂⠈⠉⠉⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⢿⡿⠁⠈⠛⠷⠿⠿⠿⠿⠿⠸⠿⠇⠛⠁⠀⢹⣿⠀⠀⠀⠀⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⡇⠀⠀⠀⠘⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠏⠀⠀⠀⠀⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⡇⣠⣶⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⢰⣦⢰⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⡙⠇⣰⡇⢰⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣷⢠⣷⡜⢋⣾⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣇⢿⠗⣿⣿⣷⡄⣴⣶⣴⡆⣶⡆⣶⣰⣶⡄⣾⣿⣿⡞⢿⣣⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣷⣧⡻⡿⢟⣣⣛⣣⠻⣃⡻⣣⣛⣣⣛⣡⣛⡻⡿⣱⣷⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣷⣾⣿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⣿⣶⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⣭⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣽⣿⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⠛⠋⠉⠁⠀⠀⠀⠀⠈⠉⠙⠛⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            \u001b[0m
            \u001b[0m
            """)

def terminal():
    print("""
        ⢀⣴⣶⠛⠋⠉⠉⠉⠉⠉⠙⠛⠒⠒⠒⠒⠒⠒⠒⠀⠠⠤⠤⠤⠤⠤⠤⠤⠤⠤⢤⣤⣄⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣼⢻⡇⠀⠀⢀⣠⡤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣈⠉⠉⠳⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣇⢸⡇⠀⠀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠻⣆⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣿⠸⣧⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠐⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⢸⠀⣿⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠸⡄⢸⡄⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⡇⠀⡇⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⣷⠀⢷⠀⠀⠸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠘⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⢻⠀⢸⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⢸⡇⠸⡄⠀⠀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠈⣿⠀⣇⠀⠀⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⣿⡀⢹⠀⠀⠘⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠉⡇⠸⡄⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠆⢸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⢧⠀⣷⠀⠀⢸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡤⠴⠞⠋⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⢸⠀⢹⡀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⠤⠴⠒⠛⠉⠁⢀⣀⣠⣤⣶⣾⣿⣶⠶⠤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠘⡆⠈⣇⠀⠀⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⠤⠴⠒⠚⠋⠉⠉⢀⣀⣠⣤⣴⣺⣿⣿⣿⣿⣿⣿⣟⣿⣽⢷⡲⢦⣬⣉⡙⠒⠶⠦⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⢧⠀⢹⡀⠀⠘⢷⣤⠤⠤⠤⠖⠒⠚⠋⠉⠁⠀⠀⣀⣀⡤⠴⠖⢚⣯⡫⠼⣿⣿⣽⢿⣿⣿⣭⠼⣿⡛⢛⣦⣬⣟⠛⣿⣭⡽⠓⣶⣤⡀⠈⠉⠓⠲⠤⣤⣀⡀⠀⠀⠀
        ⠀⠀⠀⠀⢸⡀⠈⣇⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡤⠤⠖⠻⢋⣁⣈⣤⣶⣾⣯⡿⠟⢿⣉⣠⣿⠛⠋⠹⣧⡠⣾⣿⣻⣷⠴⠟⢿⣅⣠⣿⣾⡿⠟⠁⠀⠀⠀⠀⠀⠀⠈⠉⠓⠲⣤
        ⠀⠀⠀⠀⠈⣧⠀⢹⡆⣀⣀⡤⠤⠖⠛⠋⠁⠁⣀⣠⣤⢖⢻⣿⣥⣴⡛⢉⣹⡷⠶⠿⣍⣀⣨⠷⠞⢻⣅⡠⠼⠟⠉⣹⣦⣴⣿⡿⠟⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚
        ⠀⠀⠀⠀⠀⠸⠷⢾⢿⡍⠀⠀⠀⣀⡤⠴⢾⣏⣁⣤⢿⠛⣿⣥⠤⢾⡛⠉⣙⣦⠤⢶⣏⢉⣨⡷⠖⠛⢁⣠⡤⢾⣿⣿⣿⣿⡿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠟⠁⠀⣠
        ⠀⠀⠀⠀⠀⠀⢠⣟⡀⠙⢦⡀⠀⠙⢶⡞⢻⣍⣠⡽⠟⠛⠛⢦⣄⣤⠟⠛⠻⣄⣠⠴⠛⠉⢀⣀⣤⣞⣏⡥⣞⣻⡿⠛⠋⠀⠀⠀⠙⠦⡄⠀⠀⠀⠀⢀⣠⠴⠛⠁⠀⣀⡴⠚⠁
        ⠀⠀⠀⠀⠀⠀⠀⠻⣧⡀⠀⠙⢦⡀⠈⠙⢿⡇⠈⣳⣦⠴⠾⣝⢁⣨⠷⠖⠋⢧⣀⣠⠴⢺⣭⡼⠟⣫⡥⠞⠋⠁⠀⠀⠀⠀⠀⠀⢀⡴⠇⠀⢀⡠⠖⠉⠀⠀⣠⠴⠚⠁⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠙⢦⡀⠀⠙⢯⡁⣀⡠⣶⠋⠉⠈⣳⡤⣶⣫⣭⡴⠖⠉⢱⡶⠊⠉⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⠋⣀⡤⠞⠉⠀⢀⣠⠶⠋⠁⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠙⢦⡀⠀⠙⢧⣀⣹⣷⣶⣿⡿⠿⠟⠉⠁⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⣀⡴⠚⠁⣠⠴⠛⠁⠀⣀⡴⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠙⠦⣀⠀⠉⠙⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣤⠖⠋⢁⡤⠞⠋⠁⢀⣠⠴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢦⡀⠀⠈⠲⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠚⠉⠀⢀⣤⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠚⠋⠀⢀⣠⡴⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⡀⠈⠛⢦⡀⠀⠀⠀⢀⣠⠴⠚⠉⠁⠀⣠⡤⠖⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠦⣀⠀⠙⠓⠒⠛⠉⠀⠀⣀⡤⠖⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣄⣀⣤⠤⠖⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        """)

def car():
    print("""
        \u001b[40m
        \u001b[36m
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⠿⠟⠛⠛⠛⠛⠛⠛⠛⠛⠛⢛⣛⣛⣛⣛⣛⣛⣛⣛⣛⣛⣛⣛⣛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣫⣭⣤⡤⣮⣤⣤⣤⣤⣤⣤⠀⢱⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣍⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣾⣿⣿⣿⢷⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣌⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⢏⣲⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣾⣿⣽⣾⡿⣧⣬⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡿⣿⣿⢿⡿⢿⢿
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⣺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣽⣾⣟⣷⢿⣯⢷⣗⣌⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡭⢭⢭⡽⣯⣿⣿⣿⢿⠿⡽⠻⠭⠏⡖⠄⠢⠀⠀⠄⠠⠆⡔⠦⠌
        ⣿⣿⣿⣿⣿⣿⣿⣿⢿⡿⢿⠿⠿⠿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⢺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠈⢿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣷⣿⡾⢿⠾⢿⣾⠿⠷⢼⣟⠛⠛⠛⠻⠿⠿⢛⣋⠉⠀⠁⠐⠈⠂⢹⡙⠎⠒⠈⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣭⣭⣭⣷⣶⣶⣶⣶⣾⣾⣿⣿⣿⣿⠗⠀⠿⣿⣿⣿⣿⣿⣿⣿⠏⢄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⢈⠿⠛⠻⠿⣿⣿⣻⣟⣻⣛⣟⡻⣭⢏⡭⣭⣙⢫⡌⣕⢢⠖⡤⢒⢆⡰⢀⢨⡀⢆⡂⢌⡉⡙⠒⠦⠤⣄⣀⠀⠈⠛⠴⠦⣤⢄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡔⠈⠉⠉⠉⠙⠛⠛⠛⠛⠛⠛⠛⠛⠻⠟⢀⠃⠀⠀⠀⠀⠀⠈⠉⠚⠳⠿⣞⡷⣽⢮⣳⢧⣛⣶⡹⡜⣎⠞⣱⢋⢦⡑⠎⠈⡗⢬⡘⢄⠒⠈⠁⢂⠐⠠⢈⡙⠳⠶⣄⠒⠄⡉⠑⡊⠶⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢠⠀⠀⠀⠀⠀⠀⠀⢠⢀⠛⠛⢠⣤⣤⢠⠀⣄⢀⠀⣀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠻⠷⣏⡟⣶⡹⡽⣌⡻⢄⠋⢢⣉⣐⡀⠡⠢⢀⠀⠀⠀⠘⢦⣌⡔⢢⡙⣬⢓⡬⢳⡸⣰⠡⣀⣴⠛⠛⠓⠀⠀⠀⢀⢀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠒⠲⢼⣤⢶⣶⡄⢀⣀⠀⠆⠈⠀⠀⣿⢿⡿⣞⠑⡃⣼⣤⣿⢡⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠭⣖⠉⢜⠿⣿⣧⠀⣀⡤⡤⡴⡶⠶⣾⣳⣾⠁⢻⣿⢦⡝⢶⢫⠞⢧⠳⠥⠓⠠⠈⠐⠀⡿⠽⠿⠾⡟⢳⠀⠀⠀⠀⠀⠀⢀⠀⡀⠀⠀
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠿⢶⣿⢩⣼⣿⣦⣤⣉⣋⣉⣙⠒⠒⠒⠒⠬⠬⠤⠭⢍⣛⣘⣛⣛⡀⡄⠀⠀⠀⠀⠀⠀⣀⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢾⠯⠽⠯⡟⡏⠉⠉⠉⠉⠁⡏⢹⡀⢀⣈⣤⣈⣦⣥⣾⣴⣶⣦⢷⣶⣠⣄⠴⣇⠀⠀⠀⠀⠀⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣾⣿⢸⣿⣿⣿⣏⣉⡟⠛⠛⠛⠻⠿⠿⠶⣶⣶⣦⣤⣤⣤⣤⣄⣉⣍⣉⢉⠛⢃⡔⣩⣿⣿⣿⣿⣟⣦⡀⠀⠀⠀⠀⠀⠀⢠⣤⡤⢤⣤⡵⡏⣇⠀⠀⠀⠀⠀⠀⣟⣧⣀⣤⢣⣞⣲⠿⡿⢿⡽⣟⣻⣛⡟⣞⢋⣿⠀⠀⠀⣀⢀⣻⣦⣶⢀⠀⢀⠀⢠⡀⢀⠐⠅⡞
        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣦⣤⣤⣀⣀⣉⣉⠉⠉⠛⡟⠛⠻⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣶⣶⣶⣤⣤⣤⣼⡶⣾⢦⢦⠯⠻⠤⠀⣀⠐⡀⠀⠁⠀⠀⠰⣌⣳⣜⣶⣯⣽⣷⣯⣿⣵⣿⣾⣶⣷⣾⣷⣿⣿⣿⣅⣻⣹⡀⠀⠐⡰⡰⢄⡐⢪⡜⣧⢻
        ⣿⣿⣿⣿⣿⠿⠿⠛⢋⣉⣥⣴⣶⣾⢿⣿⣧⠰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣻⣏⠁⠉⠉⠉⠉⠓⠛⠒⠛⠚⠛⠚⠓⠛⠒⠛⣾⣛⡓⠈⢭⠉⢹⣽⣿⣿⣿⣿⣿⣿⣿⣷⣿⣷⣿⣿⢿⣟⣿⣻⣿⢿⣿⣶⡱⡇⢘⠀⢀⢚⡱⢋⡜⣣⠼⣘⢧
        ⠛⢋⣉⣤⣴⡶⣾⢿⣻⢿⣻⣽⣻⣞⣹⠟⢻⣇⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⢿⣿⣿⣿⣷⣶⣶⣶⣶⣶⣦⣶⣤⣤⣤⣴⣶⣿⣷⣾⣞⡿⣶⣿⣿⢯⣿⣽⣻⣿⠿⠿⠽⣿⣿⣿⢞⠛⢻⣿⣿⣿⣿⣿⣿⣿⡇⢈⢰⠃⡔⢠⢣⠜⢦⡛⡜⣎
        ⣿⣏⡿⢷⣉⡿⣉⢿⡹⣾⢱⡾⣿⣿⡿⣏⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢾⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⢷⡇⠷⠹⠸⠀⢀⢸⣿⣿⣿⣿⠿⠿⠟⠏⢀⠄⢰⠸⢇⢇⡾⢁⡹⡸⣆
        ⡗⣮⡝⣯⢳⡽⣹⢎⠷⣩⡓⢧⠳⣍⢳⡙⢾⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⢻⣿⣿⣿⣿⣿⡗⢀⠀⡆⢻⣀⠮⠿⣅⣾⢸⣿⣿⣿⣿⣷⠂⠇⠀⠀⡴⢢⡛⡜⢮⡜⣣⠷⣱⢎
        ⣟⡲⢽⣘⠧⡞⣥⢫⠞⣥⡙⡎⠵⣊⠵⣘⠦⢣⡜⢬⠹⣙⠻⠿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⢘⣿⣿⣿⣿⣿⡇⠋⣠⣁⣞⣀⣲⣴⣥⣤⣿⣿⣿⣿⠛⡛⠭⡤⡘⢦⣉⠧⣱⠙⢦⡙⢦⡙⢦⢋
        ⡮⣝⡲⣍⡞⣱⢎⡥⣛⢤⢣⡙⢦⡑⡎⡴⣉⢧⡘⣎⡱⢊⡭⠳⡌⢧⢫⠝⣛⠿⡻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡵⢨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠧⡙⣌⠳⡔⡙⢆⡣⢞⡡⢋⢦⡙⢦⡙⣆⢣
        ⡷⣭⢳⡽⣜⡳⣎⢷⡹⣎⢷⡹⣖⡹⣼⡱⢭⡲⣙⠦⢳⣍⢺⡱⢍⡲⣉⢎⡱⢊⡕⢣⡜⢬⡙⡝⡻⢿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣧⣷⣬⣓⡜⣍⢞⡰⣃⢎⡍⢦⡙⢦⠱⡘⢆
        ⡷⣭⢳⡞⣵⠻⣜⢧⡻⣜⢧⣛⡼⣱⢧⡝⣧⢳⣍⠾⣱⢎⡳⣜⣣⠳⣍⡞⣜⢣⢞⡱⣚⢦⣙⠶⣙⢎⠶⣌⢧⢛⡽⢻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣷⣭⣶⣘⠦⡙⡆⢏⡱⢊
        ⡷⣹⢶⡹⣎⢟⡼⣣⢟⡼⢣⢯⡜⣧⢻⡜⣧⢻⡜⣏⠷⣎⡳⡼⣡⠟⡼⡜⢮⣙⢎⠷⣩⠖⣭⢺⡱⢎⡳⡜⣎⢎⡜⣣⢛⡴⢣⡝⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⠿⡿⢿⢛⡻⢉⠖⠩⠘⠌⢒⠩
        \u001b[0m
        \u001b[0m
        """)
    
def monkey():
    print("""
        \u001b[31m
                            ⢻⣿⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⢤⣤⣀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠸⣿⣿⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠹⣿⣧⣀⣾⣿⣿⠆⠀⣀⣠⣴⣿⣿⠿⠟⠛⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⣻⣿⣿⠿⠋⠁⠀⠀⠉⠉⢹⣿⣿⠀⠀⠀⣀⣠⣤⣄⠀⠀⠀⠀
        ⠀⠀⠀⢀⣤⠾⠿⣿⡇⠀⢀⠀⣀⣀⣤⣴⡾⠿⠛⠛⠛⠉⠙⠛⠛⠛⠛⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠈⢿⠿⠛⣉⠁⢀⣀⣠⣤⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⣼⣿⣿⠀⠀⠀⠀⢺⣿⡟⠋⠉⠁⣼⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⢀⣾⣿⣿⣿⠀⠀⠀⠀⠈⣿⣷⣤⣤⣤⣿⣿⠁⢀⣀⣀⠀⠀⠀⠀⠀
        ⠀⠀⠀⣠⣿⠟⠁⢸⣿⠀⠀⠀⠀⠀⠹⣿⣿⣯⡉⠉⠀⣠⣾⣿⠟⠀⠀⠀⠀⠀
        ⠀⣠⣾⠟⠁⠀⠀⢸⣿⠀⠀⠀⠀⠀⣠⣿⣿⡁⠙⢷⣾⡟⠉⠀⠀⠀⠀⠀⠀⠀
        ⠈⠉⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⢀⣼⡿⠋⣿⡇⠀⠀⠙⣿⣦⣄⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⣾⣿⠀⣠⣴⠟⠋⠀⢀⣿⡇⠀⠀⠀⡈⠻⣿⣷⣦⣄⠀⠀⠀
        ⠀⠀⠀⠱⣶⣤⣴⣿⣿⠀⠁⠀⠀⠀⠀⢸⣿⡇⣀⣴⡾⠁⠀⠈⠻⠿⠿⠿⠷⠖
        ⠀⠀⠀⠀⠈⠻⣿⣿⡇⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⢻⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
        \u001b[0m
        """)
    
def wound():
    print(""" 
        ⬜⬜🟫🟫🟫⬜⬜⬜⬜⬜⬜⬜
        ⬜🟫🏽🏽🏽🟫⬜⬜⬜⬜⬜⬜⬜
        ⬜🟫🏽🏽🏽🏽🟫⬜⬜⬜⬜⬜⬜
        ⬜🟫🏽🏽🏽🟫🏻🟫⬜⬜⬜⬜⬜
        ⬜⬜🟫🏽🟫🏻🏻🏻🟫⬜⬜⬜⬜
        ⬜⬜⬜🟫🏻🏻🏻🏻🏻🟫⬜⬜⬜
        ⬜⬜⬜🟥🟫🏻🏻🏻🟫🏽🟫⬜⬜
        ⬜⬜⬜🟥🟥🟫🏻🟫🏽🏽🏽🟫⬜
        ⬜⬜⬜⬜🟥🟥🟫🏽🏽🏽🏽🟫⬜
        ⬜⬜⬜⬜🟥⬜⬜🟫🏽🏽🏽🟫⬜
        ⬜⬜⬜⬜🟥⬜⬜⬜🟫🟫🟫⬜
        """)
    
def heart():
    print("""
        ⬜⬜⬛⬛⬛⬜⬜⬜⬛⬛⬛⬜⬜
        ⬜⬛🟥🟥🟥⬛⬜⬛🟥🟥🟥⬛⬜
        ⬜⬛🟥🟥🟥🟥⬛🟥🟥🟥🟥⬛⬜
        ⬜⬛🟥🟥🟥🟥🟥🟥🟥🟥🟥⬛⬜
        ⬜⬛🟥🟥🟥🟥🟥🟥🟥🟥🟥⬛⬜
        ⬜⬜⬛🟥🟥🟥🟥🟥🟥🟥⬛⬜⬜
        ⬜⬜⬜⬛🟥🟥🟥🟥🟥⬛⬜⬜⬜
        ⬜⬜⬜⬜⬛🟥🟥🟥⬛⬜⬜⬜⬜
        ⬜⬜⬜⬜⬜⬛🟥⬛⬜⬜⬜⬜⬜
        ⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜
        """)
        
def girl():
    print("""
          \u001b[47m
          \u001b[30m
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠤⠤⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠖⠁⣀⡴⠶⢄⡀⠙⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠔⠉⣠⠔⠈⣠⡴⡖⠤⣈⠑⠤⡀⠑⠦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠊⣀⠔⠊⡠⠔⣉⡴⠛⠛⠳⢮⣕⡦⡈⠓⢤⡈⠑⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠃⡠⠊⢀⠔⣊⠴⠚⠁⢀⣠⣶⣀⣀⠉⠻⢾⣗⣤⡈⠢⣀⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⢢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢁⡠⠊⣠⢶⣵⣞⡥⠐⢲⠒⠛⠛⢇⡀⠈⠙⠳⠶⣟⡳⣮⣢⣀⠑⢄⠙⠶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠙⢢⣄⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⢁⠔⠈⣠⠞⢀⠀⢈⡴⠀⠀⢨⠀⠀⠀⠀⢹⡦⡀⠀⠀⢌⡙⢟⠻⣮⣳⣄⠑⢤⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠈⠹⣧⣄⠀⠈⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⡰⠁⡠⡾⠃⡔⠁⢠⡟⠁⠀⢸⠇⢰⠀⠀⠀⠀⢻⠱⣄⠀⠀⠈⠃⢿⡮⣿⣿⣿⢄⠑⢄⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⣄⠀⠈⢾⣷⣞⣿⣛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⡠⠊⡠⢊⡔⢁⡾⠀⢠⡿⠀⠀⢀⡟⠀⢸⢀⠀⠀⠀⡈⡄⠙⣦⠀⢢⡀⠀⠙⠄⠙⠻⣿⠻⣦⠱⡀⠱⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠈⠳⣶⣾⣿⣿⣿⠿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⢀⠜⢁⢄⣴⡻⠠⢿⠁⠀⡏⡇⠀⠀⣸⠃⠀⠰⢸⠀⠀⢠⢹⢅⠀⠘⣧⡀⠐⢄⠀⠈⢷⡐⢄⠙⣾⢧⣬⣦⣨⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠈⠋⠘⣿⣿⡿⡿⣷⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⡠⠃⣠⡿⠋⢹⢃⠇⡎⠀⢸⢨⠁⠀⢀⡿⠀⢠⣇⡇⠀⠀⠸⢨⠀⠀⠀⢹⣎⠂⠶⣍⠢⡈⢷⠀⠑⢄⡙⠷⣄⠉⡍⠹⡒⠂⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠉⠙⣷⣾⠛⣿⣢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⢁⠜⢁⢜⠏⡠⢀⢏⡞⢰⠁⠀⡌⠈⠀⠀⣼⡇⠀⠸⣯⡅⠀⠀⡇⢸⡄⠀⡀⠀⢧⢣⠘⢿⡓⠺⣶⣗⡀⠈⣿⡢⢌⣷⡈⢆⠘⢄⠀⠀⣳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣯⡽⣟⣿⣄⠀⠀⠀⠀⠀⠀⠀⠈⣀⠊⣠⢪⣞⣰⡷⡞⢠⠇⣇⠀⣰⠃⡂⠀⣼⢾⡇⠀⢸⠏⡄⠀⢰⠷⡾⠇⠀⢧⣀⠸⡉⠣⣈⢷⠠⣷⢘⡿⢕⣿⢣⠀⢿⣿⣤⢣⠈⢳⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢷⣿⣟⣾⣵⣄⠀⣀⠄⠒⠊⢩⢋⣹⣿⠻⣿⠋⢸⡁⡸⢸⣿⠀⣿⠀⡅⢰⣏⣸⡇⠀⡜⠀⠂⣤⡞⣴⠃⣠⣴⣿⣿⣷⣧⣤⢹⡟⢻⣠⡈⡇⠈⡿⠏⣧⠀⢻⣟⡆⠱⡀⢂⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣽⣿⢛⣷⣷⡦⠀⢠⣿⡽⢹⢁⣾⡇⢠⡟⠁⠇⡜⢿⠀⡿⡆⣿⡉⣇⠀⡆⣠⠃⠀⠚⠋⠀⠰⠀⢻⣿⣿⠉⠀⠙⠉⣿⠓⢸⡟⢇⣧⣼⠉⢻⣹⣧⢸⠛⡟⡄⠑⡀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⡾⣽⣿⣇⣀⠚⣿⢁⢎⡾⣿⢁⣼⠃⢰⠀⡇⢸⠠⠇⢷⣹⡷⣿⣄⠷⢟⠀⠀⠀⠀⠀⠀⠀⠚⠋⣿⣀⣀⣰⠢⢿⠀⣼⠁⡼⣿⣿⡰⣌⠻⣿⣬⠀⢃⠱⡀⢡⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣬⢿⣿⣴⣡⠎⢸⣷⣿⡾⢹⢀⣿⢀⡇⠸⡴⣦⣾⠿⣿⠋⠛⠻⡦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⣾⡇⠀⢻⡯⣿⣿⡆⠑⢿⠹⠀⠀⢣⠱⡀⠀⠈⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣮⣜⢻⣯⡀⠄⣼⣿⠁⡾⢣⣧⣸⠉⡀⡿⠿⢦⠀⠡⣀⣀⠀⠙⠀⠀⠀⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠿⣇⠀⢾⣅⣿⣿⡿⢶⣾⡎⡇⠀⠈⢣⢡⠀⢂⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢿⣿⣿⣿⣿⣾⣿⡟⢰⣷⣾⡟⢻⡀⢣⢰⡀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠖⠉⠁⢨⢹⠀⣸⡿⢻⡏⢷⠀⠈⢻⡷⠀⡄⠀⠆⢣⠈⡄⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⡛⡹⢿⣯⣿⡟⢻⣷⣿⣿⢛⠃⠀⣇⣶⣟⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⢼⢀⣟⠀⠀⢣⠈⠧⠀⢉⡅⠀⣿⡀⠘⡈⡆⠰⡀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠇⢠⢀⠇⢈⣿⢻⣷⣷⣿⣿⢿⣿⠀⠀⣿⡌⢶⣿⡙⠣⠀⠀⠀⠀⠀⠀⠀⠀⢸⠏⠀⠙⣆⠀⠀⠀⠀⠀⠀⢠⡏⢸⢞⣿⠀⠀⡀⠀⠀⣠⣤⡇⢠⢻⣧⠀⢣⠘⡀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⣼⣤⣿⡟⢠⣿⣿⣿⣿⣿⣿⡇⢠⡇⠘⢷⣌⡿⣦⣀⣄⠀⠀⠀⠀⠀⠀⠘⠷⠀⠀⠋⠀⠀⠀⠀⠀⣠⢟⣇⡞⣸⣿⣷⣾⣿⣿⣷⣈⠑⠃⢸⢰⣿⡀⠈⡆⠇⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣷⡿⣫⣿⡇⢸⠙⣿⣿⣿⣿⣿⣿⡀⣷⣤⠊⡿⠀⠀⠀⣿⣷⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠜⣹⣼⠃⣧⣿⣌⣏⠿⣿⣿⣦⣇⡎⠀⣾⡟⣿⣇⠀⢡⢸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⡿⢻⣿⢃⠿⣾⣇⢽⣿⣿⣦⣹⣷⣏⢃⢀⠇⠀⠀⣰⠟⠁⠀⠈⠐⢦⣄⣀⠀⠀⠀⠀⠀⡠⠖⢁⢸⡋⣏⣾⣿⡿⠿⣿⡾⠟⢿⡟⡙⠀⣸⡿⠁⢹⣿⡀⠘⡌⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⡟⠋⠋⠀⣼⣿⡟⡸⠃⠘⠄⢹⡷⣾⠇⠀⠈⠉⠛⠲⠾⢏⠁⠀⠀⠀⠀⠀⠘⣍⠻⠿⠷⠶⣶⣯⠤⠤⢀⣰⡟⢁⣾⡟⣿⣽⠻⣴⣾⠞⡡⠁⣸⣿⠃⠀⠸⣿⡇⠀⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣴⣿⣿⠛⠁⢠⠁⠀⣿⣿⡷⠁⠀⠱⡬⠿⢿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⢄⠀⠀⢀⡼⠉⢦⠀⣠⡶⣿⢿⢦⣠⣀⢀⡿⣏⣸⡿⣿⣿⣠⣻⠃⡔⠁⣼⡿⠃⠀⠀⠀⣿⣇⠀⢸⠐⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡄⡄⢨⠁⠘⣿⡏⠀⠀⢀⠤⠛⡻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠩⣉⣷⣀⠛⠛⠙⠻⡟⠾⠳⠆⢫⠉⣧⣼⠿⠿⡟⣿⣿⡿⣊⣠⡾⣿⠷⢄⠀⠀⠀⣿⣿⠀⢨⠀⡇⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⠀⢸⣿⡇⢀⠔⢁⠔⣫⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣍⡀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢿⣿⣶⡮⢶⠿⢋⣷⣿⣿⣿⣦⣝⢄⠑⢄⠀⣿⣿⠀⠘⠀⡇⢸⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⠀⢨⣿⡷⠃⣰⣯⣿⣽⡟⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠿⣿⣙⣄⠉⠢⡀⠀⠀⠀⠀⠀⠀⡜⣇⠻⠖⢁⣴⣿⣿⠏⠀⠹⣿⣿⣿⣵⣄⠱⣿⣿⠀⢰⡄⢃⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⢸⠀⠸⣿⢃⣾⣿⠛⢿⣿⡇⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠁⠀⡛⠉⠉⠀⠀⠈⠀⠀⠀⠀⠀⠸⠧⣿⣤⡘⠛⠛⠿⣿⣀⠀⠀⣿⣿⣟⢻⣮⣢⢸⣿⠀⠠⡇⠈⢐⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠘⠀⢸⠀⢸⣿⢿⡿⠁⢨⢸⣿⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⠀⠉⠉⠀⠀⠀⠈⠉⠙⠛⠿⡈⠛⣷⣻⣿⠀⢈⡇⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⠀⠀⢬⠀⢸⢃⣿⣠⢔⣮⣿⣿⡇⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⢺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢣⣹⣯⣿⠀⢀⡇⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢨⠀⠀⠄⠀⠀⣼⣿⣾⡿⠛⠁⠀⠀⣰⣼⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣇⠀⠀⡇⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⢰⣿⡿⠃⠀⠀⣀⣠⣴⣵⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣇⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠼⣿⣿⠀⠀⡇⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠁⠀⢸⣿⣿⣶⣶⣭⠛⣩⡿⠋⠙⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠸⡄⢀⣴⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⣿⣿⣿⠀⠀⠇⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⠀⢘⣿⡏⠛⡿⣷⡾⠋⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⡞⠀⢈⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⢀⠞⠀⠀⠀⠀⢀⠛⢻⣿⠀⠀⡃⠠⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡝⠀⢨⣿⡇⢰⡇⣿⠁⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠈⡇⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣆⠀⣤⠎⠀⠀⠀⠀⠀⣼⡀⢸⣿⠀⠐⡇⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⢰⡿⢿⣿⠷⠛⠃⠀⠀⠀⠀⢰⠉⡇⠀⠀⠀⠀⠀⠀⠀⠀⠰⡆⠀⠀⠸⣸⡆⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡀⠁⠀⠀⠀⠀⠀⣼⢿⣝⣻⣿⠀⠀⡇⠀⠀⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⡀⠀⠘⣵⡟⠁⠀⠀⠀⠀⠀⠀⠀⡞⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡄⠀⢿⡇⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⣺⣱⡄⠀⠀⠀⠀⡘⢳⠀⠙⣷⣜⠂⠀⡅⠀⠀⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢰⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⢧⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⡇⢀⠃⠀⠸⢫⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⡼⡿⡇⢹⡿⡇⠀⠀⠀⢰⠃⠀⠀⠀⢼⣿⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⢀⠾⣆⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⢼⣼⠀⠀⠀⢸⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⣼⠟⢰⠁⢸⢇⢹⠀⠀⢀⠇⠀⠀⠀⠀⢸⣿⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⡜⠀⠈⠓⠼⡆⠀⠀⠀⠀⠀⠀⠀⢺⠐⠀⢀⡄⢸⠀⡜⠀⠀⠀⠀⠀⠀⠀⣼⣏⠔⢸⠀⠰⢸⠀⢇⠀⡸⠀⠀⠀⠀⠀⢸⣿⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⡆⠀⢸⣿⡇⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠸⠤⠤⣯⣄⣼⡋⠀⠀⠀⠀⠀⠀⢀⣼⣫⠃⠀⡆⠀⣸⠇⢀⠎⢰⠁⠀⠀⠀⠀⠀⢸⣿⠀⠀⡇⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠢⠀⢸⣿⡇⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠉⠉⠓⢲⢤⠤⣤⣤⡜⡛⠁⢀⠤⠀⣰⢏⡤⠉⢠⠷⣄⠀⠀⠀⠀⠀⢸⣿⠀⠀⡇⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⢸⣿⡆⠀⠀⠀⠀⠀⢰⠇⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢈⣾⡇⠀⠀⠉⠒⠲⠧⠤⢶⡽⠋⠀⢀⡏⠀⠙⢶⡀⠀⠀⠀⢸⣿⠀⠀⡇⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⡀⠀⢸⣿⠇⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⣤⣀⠜⢹⡇⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⣸⠳⣶⣄⣨⣷⣄⠀⠀⢸⣿⠀⠀⡇⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⡇⠀⠀⡆⠀⢸⣿⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠈⠁⢠⡾⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⢠⠋⢆⠙⠻⢧⣄⠬⣧⣀⣸⣿⡀⢀⣧⣼⣷⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡆⠀⠃⢀⠀⣁⠀⢸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡆⠀⠀⠀⠀⠀⠀⢸⠐⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⢠⠏⠀⠈⠻⣯⡍⢿⣆⠈⠿⣍⠟⢛⣿⡟⢏⣻⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣿⢿⡶⣧⣼⡗⢿⡄⢸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⢰⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠀⠀⢀⠎⠀⠀⠀⠀⠉⠻⣄⠻⣳⡄⠛⣷⡞⢻⡇⢈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠗⠋⢹⢷⣼⠙⡋⠁⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡄⠈⡇⠀⠀⠀⠀⠀⠀⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠁⠀⠀⠀⠀⡌⠀⠀⠀⠀⠀⠀⠀⠙⢦⣜⣿⣿⡟⠻⣾⡇⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢿⣶⣇⠀⢸⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⠀⠀⠛⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⢀⡜⠁⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⢀⣀⣠⡼⢷⣿⡟⢿⣦⣸⣷⣤⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⢿⣽⣆⣸⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⢸⣟⣶⣇⣾⢷⣌⣿⣧⣸⠛⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⣷⡀⠀⢼⡍⣬⣙⣷⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⣠⠔⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⣀⣤⣤⣼⣯⡿⠛⢻⡃⠀⠙⠷⣿⣯⣧⡨⠷⣄⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡟⠁⠀⠈⢿⣾⣹⡿⢧⣠⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⣈⡀⠔⠊⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠙⢿⡷⣊⣭⣿⡇⠀⠀⠀⠀⠀⠀⢰⣧⣹⡘⢟⣮⣈⣦⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠜⣧⡀⠀⠀⠘⠁⠀⠈⢿⡘⣦⣿⣿⠗⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡏⠀⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⣰⣷⣦⣼⣀⣀⡤⣬⣿⣿⣻⡟⠁⠀⠀⠀⠀⠀⠀⢀⣼⡄⠱⡌⠺⢿⡄⠳⢄⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⠏⠁⠀⠀⠀⠀⠀⠀⠘⢿⣿⠿⠛⢶⢒⣦⣴⡾⠷⢿⣿⡧⠀⠀⠀⠀⢀⣴⢀⣀⡇⢀⣀⡀⠀⢤⣿⣶⠤⡀⠀⠀⢨⣭⡷⠚⣩⣽⡷⠋⠀⠈⠙⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⠃⠀⠙⣿⣿⠙⢦⣈⣧⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠆⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠈⠉⣿⣦⣭⣽⣿⡿⢳⠀⣀⠀⣴⠿⣟⣽⢷⡇⢿⣿⣽⠀⣾⣿⡭⠭⣿⣶⠢⡤⠿⣷⣾⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⣤⡻⣿⠏⢷⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⡎⠉⠛⢻⣉⣿⣗⣚⣛⣿⡿⣷⣿⢿⣉⡶⣾⣧⣷⣶⣾⡿⠛⠁⠀⠉⠛⠻⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢇⣰⣾⣧⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠿⠀⠀⠀⠀⠀⠈⠀⠻⣽⣿⣿⠹⠀⣼⣿⣍⡇⠉⠿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣜⣇⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠏⠙⠀⠀⠀⠉⠉⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣛⠇
    \u001b[0m
    \u001b[0m
    """)
        
face_map = {
    "demon_face": demon_face,
    "terminal": terminal,
    "car": car,
    "girl": girl,
    "monkey": monkey,
    "wound": wound,
    "heart": heart
}


def map_face(face):
    face_map[face]()
    return

def print_in_color(name, text):
    # Define ANSI color codes
    colors = ['\033[95m', '\033[94m', '\033[92m', '\033[93m', '\033[91m', '\033[0m', '\033[96m', '\033[97m', '\033[6m']

    # Select a random color
    color = random.choice(colors)

    # Print the name in the selected color and the text in the default color
    print(color + name + '\033[0m: ' + text)


def kill_player():
    
    map_face("monkey")
    print("\n \n")
    print("                    \033[31mHAS MUERTO\033[0m")
    print("\n \n")
    print_in_color("Espiritu", "Si quieres volver a la vida, dime tu nombre.")
    name = input(">")

    now = datetime.now()
    timestamp = datetime.timestamp(now)

    filename = "/muertos/"+name+"_"+str(timestamp)+".txt"
    savefile(filename)
    
    filename = "/die/"+name+"_"+str(timestamp)+".txt"
    savefile(filename)
    
    # Replace 'username' with the actual username
    username = 'player'
    
    # Execute the pkill command    
    subprocess.run(['pkill', '-KILL', '-u', username], check=True)
    
class Game:
    def __init__(self):

        self.current_stage = 1
        self.failures = 0
        self.prev_stage = 0

        
    def increase_failures(self):
        
            
        if self.current_stage == 1 and self.failures < 1:
            map_face("wound")
            self.failures += 1
        elif self.current_stage == 2 and self.failures < 2:
            map_face("wound")
            self.failures += 1
        elif self.current_stage == 3 and self.failures < 3:
            map_face("wound")
            self.failures += 1
        elif self.current_stage > 3:
            self.failures += 1
            
        for i in range(0, 4 - self.failures):
            map_face("heart")

    def execute_pushiment(self):
        if self.failures == 1:
            print("La terminal emite un chasquido. JODER! Eso ha dolido, te has electrocutado.")
        elif self.failures == 2:
            print("La terminal emite otro fuerte chasquido y empieza a parpadear, un sonido inaudible te imbade y sientes que la cabeza va a explotarte. Te retuerces de dolor y caes al suelo sin soltar las manos en el teclado, intentas desesperadamente no fallar el siguiente comando.")
        elif self.failures == 3:
            print("El dolor es insoportable ahora, no tendrás otra oportunidad.")
        elif self.failures == 4:
            kill_player()

    ## STAGE 1 -------------------------------------------
    def stage1(self):
        if(self.current_stage != self.prev_stage):
            map_face("terminal")
            print("""\n \n Despiertas en una habitación oscura. Sientes mucho dolor, alguien te la ha jugado. Hay una puerta cerrada con una terminal al lado. La terminal espera un comando, parece que tiene poca energia, solo podré usar unos pocos comandos.""")
        else:
            print("He de intentarlo otra vez.")
            
        command = input("> ")
        
        if command in ["ls", "ls -al", "ls -a", "ls -l"]:
            self.prev_stage = self.current_stage
            self.current_stage += 1            
            os.system('clear')
            self.stage2()
        else:
            os.system('clear')
            self.prev_stage = self.current_stage
            self.increase_failures()
            self.execute_pushiment()
            self.stage1()

    
    def stage2(self):
        if(self.current_stage != self.prev_stage):
            map_face("terminal")
            print("""La terminal muestra dos archivos.\n\u001b[33mkey.txt\u001b[0m\n\u001b[31mdeath.txt\u001b[0m""")
        else:
            map_face("terminal")
            print("He de intentarlo otra vez.")
            print("""La terminal muestra dos archivos.\n\u001b[33mkey.txt\u001b[0m\n\u001b[31mdeath.txt\u001b[0m""")
            
        command = input("> ")
        
        if command in ["cat key.txt"]:
            self.prev_stage = self.current_stage
            self.current_stage += 1       
            os.system('clear')
            self.stage3()
        if command in ["cat death.txt"]:
            map_face("demon_face")
            kill_player()
        if command.startswith("nano "):
            print("No puedes usar nano en este nivel. Intenta con otro comando.")
        else:
            os.system('clear')
            self.increase_failures()
            self.execute_pushiment()

        self.prev_stage = self.current_stage
        self.stage2()

    def stage3(self):
        if(self.current_stage != self.prev_stage):
            map_face("terminal")
            print("""El archivo \u001b[33mkey.txt\u001b[0m contiene el código \u001b[33msesamo\u001b[0m. Escribe el código en el fichero \u001b[33mcerradura.txt\u001b[0m para abrir la puerta.""")
        else:
            map_face("terminal")
            print("He de intentarlo otra vez.")
            print("""El archivo \u001b[33mkey.txt\u001b[0m contiene el código \u001b[33msesamo\u001b[0m. Escribe el código en el fichero \u001b[33mcerradura.txt\u001b[0m para abrir la puerta.""")
            
        command = input("> ")
        

        if command in ["echo sesamo > cerradura.txt", "echo sesamo >> cerradura.txt"]:
            self.prev_stage = self.current_stage
            self.current_stage += 1      
            os.system('clear')
            self.stage4()
        if command in ["cat death.txt"]:
            map_face("demon_face")
            kill_player()
        if command.startswith("nano "):
            print("No puedes usar nano en este nivel. Intenta con otro comando.")
        else:
            os.system('clear')
            self.increase_failures()
            self.execute_pushiment()        
        
        self.prev_stage = self.current_stage
        self.stage3()
        
    def stage4(self):
        if(self.current_stage != self.prev_stage):
            map_face("car")
            print("""La puerta se abre dando a la calle, fuera, se ve un coche que podrías usar para escapar pero primero tienes que abandonar la terminal con un comando""")
        else:
            print("He de intentarlo otra vez.")
            
        command = input("> ")
        if command in ["exit"]:
            self.prev_stage = self.current_stage
            self.current_stage += 1
            os.system('clear')
            self.stage_finale()
        if command in ["cat death.txt"]:
            map_face("demon_face")
            kill_player()
        if command.startswith("nano "):
            print("No puedes usar nano en este nivel. Intenta con otro comando.")
        else:
            os.system('clear')
            self.increase_failures()
            self.execute_pushiment()     
            
        self.prev_stage = self.current_stage
        self.stage4()
        
    def stage_finale(self):
        print("HAS ESCAPADO!")
        
        map_face("girl")
        print("Frente al coche, una atractiva mujer te espera.")
        print_in_color("Mujer misteriosa", "Parece que ni siquiera me ha hecho falta sacarte de ahí. Eres un hacker prometedor. ¿Cómo te llamas?")
        name = input("> ")
        
        # Define the path where you want to create the file
        # Get the current date and time
        now = datetime.now()
        # Convert the current date and time to a timestamp
        timestamp = datetime.timestamp(now)
        filename = "/ganadores/{}_{}.txt".format(name, timestamp)
        savefile(filename)
        exit()
        
    def play(self):
        self.stage1()
    
def savefile(filename):
    file = open(filename, 'a')
    # Write some text to the file
    file.write("")
    # Close the file
    file.close()
        
game = Game()
game.play()